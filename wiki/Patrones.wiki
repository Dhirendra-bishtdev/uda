#summary Patrones de interacción.
#labels Featured,Phase-Design

<h1>Patrones de interacción</h1>

En el planteamiento y desarrollo de los patrones de interacción analizados se ha tenido en cuenta las guías de accesibilidad [http://www.w3.org/TR/WCAG20/ WCAG 2.0] (Content Accessibility Guidelines) y [http://www.w3.org/WAI/intro/aria.php WAI-ARIA] (Accessible Rich Internet Applications), estándares de desarrollo web accesible que serán ampliamente utilizados en los próximos años.

A diferencia de las WCAG 1.0 desarrolladas por el W3C y la Norma UNE 139803:2004, <i>“Aplicaciones informáticas para personas con discapacidad. Requisitos de accesibilidad para contenidos en la Web”</i>, desarrollada por AENOR y en la que se basa la legislación española actual en materia de accesibilidad, las WCAG 2.0 asumen que cualquier agente de usuario y tecnología asistiva actual o futura soporta Javascript por lo que no exigen la creación de alternativas sino que los controles RIA estén programados de forma accesible.

En concreto, las WCAG 2.0 que exigen la accesibilidad mediante teclado e independiente del dispositivo de entrada:
<ul>
<li>WCAG 2.0 - Pauta 2.1</li>
Accesible a través del teclado: Haga que toda funcionalidad esté disponible a través del teclado.
</ul>

Además, las WCAG 2.0 añaden nuevas pautas que influyen en la interacción con los controles RIA:
<ul>
<li>WCAG 2.0 - Pauta 2.2</li>
Tiempo suficiente: <i>Proporcione a los usuarios el tiempo suficiente para leer y usar un contenido.</i>

<li>WCAG 2.0 - Pauta 2.4</li>
Navegable: <i>Proporcione medios que sirvan de ayuda a los usuarios a la hora de navegar, localizar contenido y determinar dónde se encuentran.</i>

<li>WCAG 2.0 - Pauta 3.2</li>
Predecible: <i>Cree páginas web cuya apariencia y operabilidad sean predecibles.</i>

<li>WCAG 2.0 - Pauta 3.3</li>
Ayuda a la entrada de datos: <i>Ayude a los usuarios a evitar y corregir errores.</i>
</ul>

En cualquier caso, debido a la multitud de problemas de accesibilidad que se pueden dar y a la propia naturaleza a veces poco accesible de las tecnologías RIA, puede haber patrones difícilmente accesibles.

<h2>Tecnología de desarrollo</h2>
Con el fin de reducir al máximo la curva de aprendizaje en el uso de <img src="http://uda.googlecode.com/svn/wiki/uda-mini-micro2.png"/>, todos los patrones de interacción propuestos han sido desarrollados con el framework JavaScript [http://jquery.com/ jQuery], aprovechando en todos los casos los plugins ya desarrollados por la comunidad.

En general, jQuery es fácil de aprender y tiene un estilo de programación casi coloquial, lo que permite conseguir resultados  rápidamente sin tener que aprender las partes más complejas de JavaScript. 

La gestión de ciertas partes visuales de los componentes que implementan los patrones  identificados se han realizado mediante el plugin [http://jqueryui.com/home jQueryUI], el cual nos permite construir aplicaciones web altamente interactivas, proporcionando abstracciones de bajo nivel de interacción y animación, efectos avanzados de alto nivel y  componentes personalizables (estilos).

Los recursos disponibles para conocer y trabjar con jQuery y jQueryUI son muy numerosos. Un amplia comunidad de desarrolladores muy activos completan continuamente su biblioteca de posibilidades (plugins). La disponibilidad de numerosos libros, articulos, foros, etc. hace que el uso de esta librería se convierta en un ventaja.

Otro aspecto a su favor es que jQueryUI está trabajando activamente en temas de accesibilidad. Cierto soporte WAI-ARIA fue ya introducido en la versión 1.7 y es posible que la versión 2.0 cumpla totalmente con las guías de accesibilidad WAI-ARIA.

<h2>RUP</h2>
Los patrones desarrollados han sido agrupados bajo un nombre propio, RUP (Rich Uda Patterns) y son los siguientes:

<h3>1. Pestañas de contenido</h3>

Permiten dar acceso de forma compacta a grupos de contenidos mutuamente excluyentes pudiendo ser integradas en zonas muy reducidas de la interfaz.

<h4>Usar cuando</h4>Cuando tengamos un elemento formado por mucha información y podamos dividir ésta en grupos diferenciados dando así a los usuarios acceso a la información de forma rápida y en un espacio compacto.

También es útil cuando tenemos que mostrar mucha información dividida en grupos diferenciados y disponemos de poco espacio para hacerlo.

<h4>Por qué</h4>
<ul>
<li>Cuando la información está correctamente separada y dividida en pestañas se facilita mucho la comprensión de la interfaz por parte del usuario ya que todo parece lógico, puesto en su sitio y correctamente separado.</li>
<li>Dan acceso a información amplia y variada sin agobiar al usuario: él elige qué pestaña mirar</li>
<li>Optimizan el espacio en la interfaz. En ciertas situaciones en las que estamos obligados a incluir una gran cantidad de información en un espacio reducido pueden ser una buena solución.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo

<h3>2. Menús de navegación</h3>

Menú de la aplicación mantenido a lo largo de todas las páginas de forma consistente, que muestra entradas directas a secciones clave de la aplicación.

<h4>Usar cuando</h4>Cuando tengamos un sitio web estructurado jerárquicamente y relativamente amplio y queramos facilitar y agilizar la navegación y dar contexto al usuario.

<h4>Por qué</h4>
<ul>
<li>Los menús de navegación son la forma estándar de estructurar grupos jerárquicos de contenidos y dar acceso a ellos.</li>
<li>Facilitan la comprensión de la estructura de la página y la navegación.</li>
<li>Apoyados de migas de pan y buenos títulos y subtítulos dan buen contexto al usuario.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo

<h3>3. Pestañas de navegación</h3>

Menú de navegación de la aplicación que divide ésta en secciones claramente excluyentes entre sí y da acceso a ellas.

<h4>Usar cuando</h4>Cuando tengamos una aplicación web cuyos contenidos se puedan dividir en secciones claramente excluyentes entre sí y queramos proporcionar a los usuarios un menú de navegación para navegar por ellas.

<h4>Por qué</h4>
<ul>
<li>Cuando la información está bien organizada y dividida se facilita mucho la comprensión de la navegación ya que se reduce su ambigüedad.</li>
<li>La metáfora de las pestañas es conocida por los usuarios. Es una metáfora traída del mundo real basada en los clasificadores de papeles.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>4. Migas de pan</h3>

Se muestra a los usuarios la ruta de navegación que ha seguido por la aplicación permitiéndoles volver hacia niveles superiores hasta la página de inicio.

<h4>Usar cuando</h4>Cuando queramos mostrar al usuario la ruta de navegación que ha seguido, en qué página está y permitirle volver fácilmente a niveles superiores.

Se recomienda usarlas en aplicaciones web con tres o más niveles de jerarquía ya que es en este tipo de aplicaciones donde son realmente útiles.

<h4>Por qué</h4>
<ul>
<li>Es una solución conocida por los usuarios y fácil de comprender.</li>
<li>Aporta flexibilidad a la navegación al permitir volver a niveles superiores.</li>
<li>Ocupa poco espacio en la interfaz.</li>
<li>Refuerza el contexto y la navegación ya que muestra a los usuarios dónde están y cómo está estructurada la información.</li>
<li>Ayuda a los usuarios a comprender la estructura de la aplicación.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>5. Botonera de opciones</h3>

Grupo de botones icónicos que ejecutan acciones generales o referidas a uno o varios elementos de la interfaz.

<h4>Usar cuando</h4>La botonera general se deberá utilizar para mostrar un menú genérico de opciones que afecten a toda la aplicación mientras que la botonera local deberá utilizarse para mostrar un menú propio de una página o contenido de la aplicación.

<h4>Por qué</h4>
<ul>
<li>Es un sistema de menús muy conocido por todos los usuarios.</li>
<li>Es muy facil de usar.</li>
<li>Es una solución válida tanto para crear menús generales de la aplicación como menús que ejecuten acciones sobre elementos en pantalla.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>6. Fechas</h3>

El usuario puede introducir manualmente una fecha o seleccionarla de un calendario moviéndose por días, meses y años y recibiendo ayudas y sugerencias para minimizar las posibilidades de que introduzca una fecha incorrecta.

<h4>Usar cuando</h4>Cuando el usuario tenga que introducir una fecha y queramos darle flexibilidad para escribirla manualmente o seleccionándola de un calendario.

<h4>Por qué</h4>
<ul>
<li>Vale tanto a usuarios avanzados (eficiencia) como a novatos (sencillez).</li>
<li>La forma de introducir la fecha es flexible: unos usuarios preferirán escribirla a mano y otros seleccionarla del calendario.</li>
<li>Manejo independiente de dispositivo: se puede usar tanto el ratón como el teclado.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>7. Intervalos de fechas</h3>

El usuario puede introducir manualmente un intervalo de fechas o seleccionarlo de un calendario por días, meses y años y recibiendo ayudas y sugerencias para minimizar las posibilidades de que introduzca una fecha incorrecta.

<h4>Usar cuando</h4>Cuando el usuario tenga que introducir un intervalo de fechas y queramos darle flexibilidad para escribirlo manualmente o seleccionándolo de un calendario.

<h4>Por qué</h4>
<ul>
<li>El sistema de introducción de fechas de este patrón tiene las ventajas del patrón anterior. Selección e introducción de fechas.</li>
<li>Es eficiente y rápido introducir intervalos.</li>
<li>Ocupa poco espacio en la interfaz en comparación con otras soluciones.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>8. Controles dependientes (Combos)</h3>

Permite al usuario seleccionar un elemento de una gran lista o de varias listas relacionadas que ocupan poco espacio en la interfaz.

<h4>Usar cuando</h4>Cuando tengamos que mostrar muchos elementos categorizados en un espacio reducido de la interfaz.

También puede ser útil como componente para crear accesos rápidos a partes de la aplicación que nos interese destacar.

<h4>Por qué</h4>
<ul>
<li>Una vez se conoce su funcionamiento es muy rápido y fácil de usar.</li>
<li>Optimiza espacio en la interfaz ya que podemos incluirlo en espacios reducidos.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>9. Presentación de datos (Tablas/Grid)</h3>

Se presentan los datos de forma que sean fácilmente escaneables visualmente y que faciliten encontrar la información que se busca.

<h4>Usar cuando</h4>Cuando tengamos que presentar a los usuarios filas de datos y queramos que les resulte fácil encontrar la información que buscan.

<h4>Por qué</h4>
<ul>
<li>Es la forma más estándar de mostrar filas de datos.</li>
<li>Permite el ojeado rápido y encontrar fácilmente la información.</li>
<li>Los usuarios pueden hacer rollover o click sobre una fila para ver así más claramente su información.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>9.1. Paginación</h3>

Permite moverse por una lista larga de elementos presentados en forma de lista o de tabla.

<h4>Usar cuando</h4>Cuando las listas de datos o tablas que se les presentan a los usuarios sean muy grandes y se haga necesario algún mecanismo de navegación para moverse entre tantos resultados y situarse en la serie.

<h4>Por qué</h4>
<ul>
<li>Es un sistema conocido por todos los usuarios, sencillo e intuitivo.</li>
<li>Es fácil de comprender y utilizar.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3>9.2. Ordenación de filas</h3>

Los usuarios pueden ordenar las filas de datos de la forma que les resulte más conveniente.

<h4>Usar cuando</h4>Cuando queramos dar al usuario la posibilidad de ordenar las filas de datos en función de sus necesidades para que pueda encontrar la información que busca más cómodamente.

<h4>Por qué</h4>
<ul>
<li>Es muy conocido por los usuarios y el método más estándar en Internet para ordenar filas de datos.</li>
<li>Es un sistema de ordenación sencillo, intuitivo y rápido de utilizar.</li>
<li>Permite encontrar fácilmente la información.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 

<h3></h3>

<h4>Usar cuando</h4>

<h4>Por qué</h4>
<ul>
<li></li>
<li></li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 


<h3></h3>

<h4>Usar cuando</h4>

<h4>Por qué</h4>
<ul>
<li></li>
<li></li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo 













<h3>Autocomplete (Suggest)</h3>

Ofrece sugerencias de búsqueda en tiempo real coincidentes con la búsqueda que está realizando el usuario.

<h4>Usar cuando</h4>Cuando queramos mejorar la búsqueda ofreciendo sugerencias a los usuarios.

<h4>Por qué</h4>
<ul>
<li>Es una funcionalidad muy fácil y cómoda de utilizar.</li>
<li>Mejora mucho la experiencia de uso de la búsqueda sencilla.</li>
<li>Bien pensada e implementada permite a un usuario descubrir nuevas áreas de conocimiento antes desconocidas para él. Por ejemplo, un estudiante que sólo conozca el método lógico deductivo de investigación y busque información sobre él, puede recibir la sugerencia "método lógico inductivo" descubriendo un método de investigación que antes no conocía.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo

<h3>Controles dependientes</h3>
Permite al usuario seleccionar un elemento de una gran lista o de varias listas relacionadas que ocupan poco espacio en la interfaz.

<h4>Usar cuando</h4>Cuando tengamos que mostrar muchos elementos categorizados en un espacio reducido de la interfaz.

También puede ser útil como componente para crear accesos rápidos a partes de la aplicación que nos interese destacar.

<h4>Por qué</h4>
<ul>
<li>Una vez se conoce su funcionamiento es muy rápido y fácil de usar.</li>
<li>Optimiza espacio en la interfaz ya que podemos incluirlo en espacios reducidos.</li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo


<h3></h3>

<h4>Usar cuando</h4>

<h4>Por qué</h4>
<ul>
<li></li>
<li></li>
</ul>

<h4>Ejemplo</h4>
TODO. Pegar Ejemplo   